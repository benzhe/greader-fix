package defpackage;

import android.os.Handler;
import android.os.HandlerThread;
import android.os.SystemClock;
import android.util.Log;
import android.util.Pair;
import com.google.android.gms.internal.ads.zzht;
import java.io.IOException;

/* loaded from: classes.dex */
public final class ee3 implements Handler.Callback, wi3, yi3, ck3 {
    public int B;
    public int C;
    public long D;
    public int E;
    public je3 F;
    public long G;
    public he3 H;
    public he3 I;
    public he3 J;
    public se3 K;
    public boolean L;
    public volatile int M;
    public volatile int N;
    public final oe3[] e;
    public final xd3[] f;
    public final zj3 g;
    public final dv0 h;
    public final dl3 i;
    public final Handler j;
    public final HandlerThread k;
    public final Handler l;
    public final de3 m;
    public final te3 n;
    public final ue3 o;
    public ge3 p;
    public pe3 q;
    public oe3 r;
    public xk3 s;
    public zi3 t;
    public oe3[] u;
    public boolean v;
    public boolean w;
    public boolean x;
    public boolean y;
    public int A = 0;
    public int z = 1;

    public ee3(oe3[] oe3VarArr, zj3 zj3Var, dv0 dv0Var, boolean z, Handler handler, ge3 ge3Var, de3 de3Var) {
        this.e = oe3VarArr;
        this.g = zj3Var;
        this.h = dv0Var;
        this.w = z;
        this.l = handler;
        this.p = ge3Var;
        this.m = de3Var;
        this.f = new xd3[oe3VarArr.length];
        for (int i = 0; i < oe3VarArr.length; i++) {
            oe3VarArr[i].i(i);
            this.f[i] = oe3VarArr[i].k();
        }
        this.i = new dl3();
        this.u = new oe3[0];
        this.n = new te3();
        this.o = new ue3();
        zj3Var.a = this;
        this.q = pe3.d;
        HandlerThread handlerThread = new HandlerThread("ExoPlayerImplInternal:Handler", -16);
        this.k = handlerThread;
        handlerThread.start();
        this.j = new Handler(handlerThread.getLooper(), this);
    }

    public static void h(he3 he3Var) {
        while (he3Var != null) {
            he3Var.a();
            he3Var = he3Var.l;
        }
    }

    public static void i(oe3 oe3Var) throws yd3 {
        if (oe3Var.getState() == 2) {
            oe3Var.stop();
        }
    }

    public final boolean A(int i) {
        this.K.e(i, this.o, false);
        this.K.c(0, this.n);
        return this.K.b(i, this.o, this.n, this.A) == -1;
    }

    public final void a(int i) {
        if (this.z != i) {
            this.z = i;
            this.l.obtainMessage(1, i, 0).sendToTarget();
        }
    }

    public final int b(int i, se3 se3Var, se3 se3Var2) {
        int iH = se3Var.h();
        int iF = -1;
        for (int i2 = 0; i2 < iH && iF == -1; i2++) {
            i = se3Var.b(i, this.o, this.n, this.A);
            iF = se3Var2.f(se3Var.e(i, this.o, true).b);
        }
        return iF;
    }

    public final Pair<Integer, Long> c(je3 je3Var) {
        se3 se3Var = je3Var.a;
        if (se3Var.a()) {
            se3Var = this.K;
        }
        try {
            Pair<Integer, Long> pairD = d(se3Var, je3Var.b, je3Var.c, 0L);
            se3 se3Var2 = this.K;
            if (se3Var2 == se3Var) {
                return pairD;
            }
            int iF = se3Var2.f(se3Var.e(((Integer) pairD.first).intValue(), this.o, true).b);
            if (iF != -1) {
                return Pair.create(Integer.valueOf(iF), (Long) pairD.second);
            }
            int iB = b(((Integer) pairD.first).intValue(), se3Var, this.K);
            if (iB == -1) {
                return null;
            }
            this.K.e(iB, this.o, false);
            return p();
        } catch (IndexOutOfBoundsException unused) {
            throw new le3(this.K, je3Var.b, je3Var.c);
        }
    }

    public final Pair<Integer, Long> d(se3 se3Var, int i, long j, long j2) {
        c50.r3(i, se3Var.g());
        se3Var.d(i, this.n, false, j2);
        if (j == -9223372036854775807L) {
            j = 0;
        }
        long j3 = j + 0;
        long j4 = se3Var.e(0, this.o, false).c;
        if (j4 != -9223372036854775807L) {
            int i2 = (j3 > j4 ? 1 : (j3 == j4 ? 0 : -1));
        }
        return Pair.create(0, Long.valueOf(j3));
    }

    @Override // defpackage.wi3
    public final /* synthetic */ void e(jj3 jj3Var) {
        this.j.obtainMessage(9, (xi3) jj3Var).sendToTarget();
    }

    @Override // defpackage.yi3
    public final void f(se3 se3Var, Object obj) {
        this.j.obtainMessage(7, Pair.create(se3Var, obj)).sendToTarget();
    }

    public final void g(long j, long j2) {
        this.j.removeMessages(2);
        long jElapsedRealtime = (j + j2) - SystemClock.elapsedRealtime();
        if (jElapsedRealtime <= 0) {
            this.j.sendEmptyMessage(2);
        } else {
            this.j.sendEmptyMessageDelayed(2, jElapsedRealtime);
        }
    }

    /* JADX WARN: Removed duplicated region for block: B:162:0x0263  */
    /* JADX WARN: Removed duplicated region for block: B:163:0x0264 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:165:0x0268 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:200:0x033f A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:292:0x04f2 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:294:0x04f9 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:297:0x0511  */
    /* JADX WARN: Removed duplicated region for block: B:298:0x0514 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:301:0x054d A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:306:0x055f A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:314:0x0572 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:317:0x0579 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, LOOP:9: B:317:0x0579->B:321:0x0589, LOOP_START, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:369:0x0667 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:430:0x0763 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:431:0x0778 A[Catch: IOException -> 0x0871, yd3 -> 0x0873, RuntimeException -> 0x087a, TryCatch #1 {yd3 -> 0x0873, blocks: (B:8:0x001a, B:13:0x0027, B:17:0x002e, B:21:0x0035, B:24:0x0047, B:26:0x004b, B:30:0x0052, B:34:0x005a, B:36:0x005f, B:37:0x0064, B:39:0x006e, B:41:0x0072, B:43:0x0076, B:44:0x0087, B:47:0x008d, B:11:0x0023, B:49:0x0091, B:56:0x00af, B:63:0x00bd, B:66:0x00c0, B:69:0x00ca, B:73:0x00ce, B:74:0x00cf, B:78:0x00d6, B:81:0x00dc, B:83:0x00e2, B:86:0x00e7, B:88:0x00ec, B:92:0x00f5, B:94:0x0117, B:95:0x011e, B:96:0x0125, B:98:0x012a, B:102:0x0135, B:104:0x013f, B:105:0x0141, B:107:0x0145, B:109:0x014b, B:112:0x0151, B:113:0x0158, B:114:0x015c, B:115:0x0163, B:117:0x0167, B:118:0x016c, B:119:0x016f, B:126:0x01a4, B:120:0x017e, B:122:0x0184, B:123:0x018a, B:125:0x0192, B:128:0x01b0, B:130:0x01b8, B:133:0x01bd, B:135:0x01c1, B:137:0x01c9, B:140:0x01ce, B:142:0x01df, B:143:0x01ed, B:145:0x01f1, B:147:0x0201, B:149:0x0205, B:151:0x0213, B:152:0x0218, B:160:0x025f, B:165:0x0268, B:167:0x0272, B:169:0x027c, B:170:0x0281, B:171:0x02a9, B:173:0x02ad, B:177:0x02b8, B:178:0x02bb, B:179:0x02c8, B:183:0x02d6, B:185:0x02dc, B:186:0x02ed, B:188:0x02f1, B:190:0x02ff, B:192:0x0311, B:196:0x031f, B:198:0x0324, B:199:0x0338, B:200:0x033f, B:163:0x0264, B:153:0x0230, B:155:0x0238, B:157:0x023e, B:158:0x0243, B:202:0x0343, B:203:0x034e, B:210:0x0359, B:211:0x035a, B:213:0x035e, B:215:0x0366, B:217:0x0370, B:216:0x036b, B:219:0x037c, B:221:0x0384, B:222:0x038d, B:224:0x0393, B:225:0x03b1, B:229:0x03ba, B:235:0x03dc, B:239:0x03ea, B:247:0x03fe, B:251:0x040c, B:254:0x0415, B:258:0x0424, B:259:0x042b, B:260:0x042c, B:262:0x0436, B:371:0x066f, B:373:0x0675, B:375:0x067e, B:377:0x0699, B:379:0x06a4, B:383:0x06ad, B:385:0x06b3, B:391:0x06bf, B:396:0x06c9, B:398:0x06d0, B:399:0x06d3, B:401:0x06d7, B:403:0x06e3, B:404:0x06f6, B:408:0x0710, B:410:0x0718, B:412:0x071e, B:448:0x07ba, B:450:0x07bf, B:452:0x07c5, B:453:0x07cd, B:455:0x07d1, B:459:0x07db, B:461:0x07df, B:463:0x07e5, B:472:0x0802, B:457:0x07d6, B:464:0x07e9, B:466:0x07ee, B:468:0x07f2, B:470:0x07f8, B:471:0x07fc, B:413:0x0727, B:415:0x072c, B:418:0x0733, B:420:0x073b, B:424:0x074a, B:437:0x0794, B:439:0x079c, B:427:0x0752, B:428:0x075f, B:430:0x0763, B:431:0x0778, B:421:0x073e, B:435:0x078e, B:442:0x07a3, B:447:0x07af, B:445:0x07a9, B:263:0x043e, B:265:0x0442, B:278:0x047e, B:280:0x0486, B:304:0x055b, B:306:0x055f, B:309:0x0566, B:311:0x056a, B:313:0x056e, B:315:0x0575, B:317:0x0579, B:319:0x057f, B:321:0x0589, B:322:0x05b0, B:325:0x05b5, B:327:0x05ba, B:329:0x05c4, B:331:0x05ca, B:333:0x05d0, B:334:0x05d3, B:336:0x05d7, B:338:0x05dc, B:341:0x05ec, B:344:0x05f4, B:345:0x05f7, B:347:0x05fd, B:349:0x0601, B:354:0x061a, B:356:0x061f, B:359:0x062b, B:361:0x0631, B:363:0x0641, B:365:0x0647, B:367:0x0650, B:368:0x0659, B:369:0x0667, B:370:0x066a, B:314:0x0572, B:281:0x048d, B:283:0x0491, B:290:0x04ee, B:292:0x04f2, B:295:0x050d, B:299:0x0519, B:301:0x054d, B:302:0x054f, B:298:0x0514, B:294:0x04f9, B:284:0x0496, B:287:0x04a9, B:289:0x04dd, B:266:0x0447, B:268:0x044d, B:270:0x0453, B:273:0x0463, B:275:0x0467, B:277:0x0472, B:474:0x0808, B:478:0x0811, B:480:0x0817, B:481:0x081e, B:483:0x0823, B:486:0x0830, B:489:0x0837, B:493:0x0842, B:495:0x0853, B:496:0x085f), top: B:513:0x0015 }] */
    /* JADX WARN: Removed duplicated region for block: B:433:0x078a  */
    /* JADX WARN: Removed duplicated region for block: B:434:0x078c  */
    @Override // android.os.Handler.Callback
    /*
        Code decompiled incorrectly, please refer to instructions dump.
        To view partially-correct add '--show-bad-code' argument
    */
    public final boolean handleMessage(android.os.Message r34) {
        /*
            Method dump skipped, instructions count: 2282
            To view this dump add '--comments-level debug' option
        */
        throw new UnsupportedOperationException("Method not decompiled: defpackage.ee3.handleMessage(android.os.Message):boolean");
    }

    @Override // defpackage.wi3
    public final void j(xi3 xi3Var) {
        this.j.obtainMessage(8, xi3Var).sendToTarget();
    }

    public final void k(Object obj, int i) {
        ge3 ge3Var = new ge3(0, 0L);
        this.p = ge3Var;
        this.l.obtainMessage(6, new ie3(this.K, obj, ge3Var, i)).sendToTarget();
        this.p = new ge3(0, -9223372036854775807L);
        a(4);
        z(false);
    }

    public final void l(boolean[] zArr, int i) throws yd3 {
        this.u = new oe3[i];
        int i2 = 0;
        int i3 = 0;
        while (true) {
            oe3[] oe3VarArr = this.e;
            if (i2 >= oe3VarArr.length) {
                return;
            }
            oe3 oe3Var = oe3VarArr[i2];
            yj3 yj3Var = this.J.m.b.b[i2];
            if (yj3Var != null) {
                int i4 = i3 + 1;
                this.u[i3] = oe3Var;
                if (oe3Var.getState() == 0) {
                    qe3 qe3Var = this.J.m.d[i2];
                    boolean z = this.w && this.z == 3;
                    boolean z2 = !zArr[i2] && z;
                    int length = yj3Var.length();
                    zzht[] zzhtVarArr = new zzht[length];
                    for (int i5 = 0; i5 < length; i5++) {
                        zzhtVarArr[i5] = yj3Var.c(i5);
                    }
                    he3 he3Var = this.J;
                    oe3Var.t(qe3Var, zzhtVarArr, he3Var.d[i2], this.G, z2, he3Var.e());
                    xk3 xk3VarM = oe3Var.m();
                    if (xk3VarM != null) {
                        if (this.s != null) {
                            throw new yd3(2, new IllegalStateException("Multiple renderer media clocks enabled."), -1);
                        }
                        this.s = xk3VarM;
                        this.r = oe3Var;
                        xk3VarM.d(this.q);
                    }
                    if (z) {
                        oe3Var.start();
                    }
                }
                i3 = i4;
            }
            i2++;
        }
    }

    public final long m(int i, long j) throws yd3 {
        he3 he3Var;
        t();
        this.x = false;
        a(2);
        he3 he3Var2 = this.J;
        if (he3Var2 == null) {
            he3 he3Var3 = this.H;
            if (he3Var3 != null) {
                he3Var3.a();
            }
            he3Var = null;
        } else {
            he3Var = null;
            while (he3Var2 != null) {
                if (he3Var2.g == i && he3Var2.j) {
                    he3Var = he3Var2;
                } else {
                    he3Var2.a();
                }
                he3Var2 = he3Var2.l;
            }
        }
        he3 he3Var4 = this.J;
        if (he3Var4 != he3Var || he3Var4 != this.I) {
            for (oe3 oe3Var : this.u) {
                oe3Var.s();
            }
            this.u = new oe3[0];
            this.s = null;
            this.r = null;
            this.J = null;
        }
        if (he3Var != null) {
            he3Var.l = null;
            this.H = he3Var;
            this.I = he3Var;
            n(he3Var);
            he3 he3Var5 = this.J;
            if (he3Var5.k) {
                j = he3Var5.a.i(j);
            }
            q(j);
            x();
        } else {
            this.H = null;
            this.I = null;
            this.J = null;
            q(j);
        }
        this.j.sendEmptyMessage(2);
        return j;
    }

    public final void n(he3 he3Var) throws yd3 {
        if (this.J == he3Var) {
            return;
        }
        boolean[] zArr = new boolean[this.e.length];
        int i = 0;
        int i2 = 0;
        while (true) {
            oe3[] oe3VarArr = this.e;
            if (i >= oe3VarArr.length) {
                this.J = he3Var;
                this.l.obtainMessage(3, he3Var.m).sendToTarget();
                l(zArr, i2);
                return;
            }
            oe3 oe3Var = oe3VarArr[i];
            zArr[i] = oe3Var.getState() != 0;
            yj3 yj3Var = he3Var.m.b.b[i];
            if (yj3Var != null) {
                i2++;
            }
            if (zArr[i] && (yj3Var == null || (oe3Var.r() && oe3Var.u() == this.J.d[i]))) {
                if (oe3Var == this.r) {
                    this.i.b(this.s);
                    this.s = null;
                    this.r = null;
                }
                if (oe3Var.getState() == 2) {
                    oe3Var.stop();
                }
                oe3Var.s();
            }
            i++;
        }
    }

    public final void o(Object obj, int i) {
        this.l.obtainMessage(6, new ie3(this.K, obj, this.p, i)).sendToTarget();
    }

    public final Pair p() {
        return d(this.K, 0, -9223372036854775807L, 0L);
    }

    public final void q(long j) throws yd3 {
        he3 he3Var = this.J;
        long jE = he3Var == null ? j + 60000000 : j + he3Var.e();
        this.G = jE;
        this.i.e(jE);
        for (oe3 oe3Var : this.u) {
            oe3Var.l(this.G);
        }
    }

    public final boolean r(long j) {
        if (j == -9223372036854775807L || this.p.c < j) {
            return true;
        }
        he3 he3Var = this.J.l;
        return he3Var != null && he3Var.j;
    }

    public final void s() throws yd3 {
        this.x = false;
        dl3 dl3Var = this.i;
        if (!dl3Var.a) {
            dl3Var.c = SystemClock.elapsedRealtime();
            dl3Var.a = true;
        }
        for (oe3 oe3Var : this.u) {
            oe3Var.start();
        }
    }

    public final void t() throws yd3 {
        dl3 dl3Var = this.i;
        if (dl3Var.a) {
            dl3Var.e(dl3Var.c());
            dl3Var.a = false;
        }
        for (oe3 oe3Var : this.u) {
            i(oe3Var);
        }
    }

    public final void u() throws yd3 {
        he3 he3Var = this.J;
        if (he3Var == null) {
            return;
        }
        long jC = he3Var.a.c();
        if (jC != -9223372036854775807L) {
            q(jC);
        } else {
            oe3 oe3Var = this.r;
            if (oe3Var == null || oe3Var.j()) {
                this.G = this.i.c();
            } else {
                long jC2 = this.s.c();
                this.G = jC2;
                this.i.e(jC2);
            }
            jC = this.G - this.J.e();
        }
        this.p.c = jC;
        this.D = SystemClock.elapsedRealtime() * 1000;
        long jD = this.u.length == 0 ? Long.MIN_VALUE : this.J.a.d();
        ge3 ge3Var = this.p;
        if (jD == Long.MIN_VALUE) {
            jD = this.K.e(this.J.g, this.o, false).c;
        }
        ge3Var.d = jD;
    }

    public final void v() {
        z(true);
        this.h.d(true);
        a(1);
    }

    public final void w() throws IOException {
        he3 he3Var = this.H;
        if (he3Var == null || he3Var.j) {
            return;
        }
        he3 he3Var2 = this.I;
        if (he3Var2 == null || he3Var2.l == he3Var) {
            for (oe3 oe3Var : this.u) {
                if (!oe3Var.w()) {
                    return;
                }
            }
            this.H.a.l();
        }
    }

    public final void x() {
        int i;
        he3 he3Var = this.H;
        long jA = !he3Var.j ? 0L : he3Var.a.a();
        boolean z = false;
        if (jA == Long.MIN_VALUE) {
            y(false);
            return;
        }
        long jE = this.G - this.H.e();
        long j = jA - jE;
        dv0 dv0Var = this.h;
        synchronized (dv0Var) {
            char c = j > dv0Var.c ? (char) 0 : j < dv0Var.b ? (char) 2 : (char) 1;
            ik3 ik3Var = dv0Var.a;
            synchronized (ik3Var) {
                i = ik3Var.e * ik3Var.b;
            }
            boolean z2 = i >= dv0Var.f;
            if (c == 2 || (c == 1 && dv0Var.g && !z2)) {
                z = true;
            }
            dv0Var.g = z;
        }
        y(z);
        if (z) {
            this.H.a.b(jE);
        }
    }

    public final void y(boolean z) {
        if (this.y != z) {
            this.y = z;
            this.l.obtainMessage(2, z ? 1 : 0, 0).sendToTarget();
        }
    }

    public final void z(boolean z) {
        this.j.removeMessages(2);
        this.x = false;
        dl3 dl3Var = this.i;
        if (dl3Var.a) {
            dl3Var.e(dl3Var.c());
            dl3Var.a = false;
        }
        this.s = null;
        this.r = null;
        this.G = 60000000L;
        for (oe3 oe3Var : this.u) {
            try {
                i(oe3Var);
                oe3Var.s();
            } catch (RuntimeException | yd3 e) {
                Log.e("ExoPlayerImplInternal", "Stop failed.", e);
            }
        }
        this.u = new oe3[0];
        he3 he3Var = this.J;
        if (he3Var == null) {
            he3Var = this.H;
        }
        h(he3Var);
        this.H = null;
        this.I = null;
        this.J = null;
        y(false);
        if (z) {
            zi3 zi3Var = this.t;
            if (zi3Var != null) {
                zi3Var.e();
                this.t = null;
            }
            this.K = null;
        }
    }
}
